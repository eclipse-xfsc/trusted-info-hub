// Code generated by goa v3.20.1, DO NOT EDIT.
//
// infohub endpoints
//
// Command:
// $ goa gen github.com/eclipse-xfsc/trusted-info-hub/design

package infohub

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "infohub" service endpoints.
type Endpoints struct {
	Export goa.Endpoint
	Import goa.Endpoint
}

// NewEndpoints wraps the methods of the "infohub" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Export: NewExportEndpoint(s),
		Import: NewImportEndpoint(s),
	}
}

// Use applies the given middleware to all the "infohub" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Export = m(e.Export)
	e.Import = m(e.Import)
}

// NewExportEndpoint returns an endpoint function that calls the method
// "Export" of service "infohub".
func NewExportEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ExportRequest)
		return s.Export(ctx, p)
	}
}

// NewImportEndpoint returns an endpoint function that calls the method
// "Import" of service "infohub".
func NewImportEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ImportRequest)
		return s.Import(ctx, p)
	}
}
