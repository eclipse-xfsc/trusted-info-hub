// Code generated by goa v3.20.1, DO NOT EDIT.
//
// infohub service
//
// Command:
// $ goa gen github.com/eclipse-xfsc/trusted-info-hub/design

package infohub

import (
	"context"
)

// Information Hub Service enables exporting and importing information.
type Service interface {
	// Export returns data signed as Verifiable Presentation.
	Export(context.Context, *ExportRequest) (res any, err error)
	// Import the given data wrapped as Verifiable Presentation into the Cache.
	Import(context.Context, *ImportRequest) (res *ImportResult, err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "infohub"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "infohub"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"Export", "Import"}

// ExportRequest is the payload type of the infohub service Export method.
type ExportRequest struct {
	// Name of export to be performed.
	ExportName string
}

// ImportRequest is the payload type of the infohub service Import method.
type ImportRequest struct {
	// Data wrapped in Verifiable Presentation that will be imported into Cache.
	Data []byte
}

// ImportResult is the result type of the infohub service Import method.
type ImportResult struct {
	// importIds is an array of unique identifiers used as Cache keys to retrieve
	// the imported data entries later.
	ImportIds []string
}
