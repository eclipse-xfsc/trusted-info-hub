// Code generated by goa v3.20.1, DO NOT EDIT.
//
// infohub HTTP client types
//
// Command:
// $ goa gen github.com/eclipse-xfsc/trusted-info-hub/design

package client

import (
	infohub "github.com/eclipse-xfsc/trusted-info-hub/gen/infohub"
	goa "goa.design/goa/v3/pkg"
)

// ImportResponseBody is the type of the "infohub" service "Import" endpoint
// HTTP response body.
type ImportResponseBody struct {
	// importIds is an array of unique identifiers used as Cache keys to retrieve
	// the imported data entries later.
	ImportIds []string `form:"importIds,omitempty" json:"importIds,omitempty" xml:"importIds,omitempty"`
}

// NewImportResultOK builds a "infohub" service "Import" endpoint result from a
// HTTP "OK" response.
func NewImportResultOK(body *ImportResponseBody) *infohub.ImportResult {
	v := &infohub.ImportResult{}
	v.ImportIds = make([]string, len(body.ImportIds))
	for i, val := range body.ImportIds {
		v.ImportIds[i] = val
	}

	return v
}

// ValidateImportResponseBody runs the validations defined on ImportResponseBody
func ValidateImportResponseBody(body *ImportResponseBody) (err error) {
	if body.ImportIds == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("importIds", "body"))
	}
	return
}
