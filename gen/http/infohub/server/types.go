// Code generated by goa v3.20.1, DO NOT EDIT.
//
// infohub HTTP server types
//
// Command:
// $ goa gen github.com/eclipse-xfsc/trusted-info-hub/design

package server

import (
	infohub "github.com/eclipse-xfsc/trusted-info-hub/gen/infohub"
)

// ImportResponseBody is the type of the "infohub" service "Import" endpoint
// HTTP response body.
type ImportResponseBody struct {
	// importIds is an array of unique identifiers used as Cache keys to retrieve
	// the imported data entries later.
	ImportIds []string `form:"importIds" json:"importIds" xml:"importIds"`
}

// NewImportResponseBody builds the HTTP response body from the result of the
// "Import" endpoint of the "infohub" service.
func NewImportResponseBody(res *infohub.ImportResult) *ImportResponseBody {
	body := &ImportResponseBody{}
	if res.ImportIds != nil {
		body.ImportIds = make([]string, len(res.ImportIds))
		for i, val := range res.ImportIds {
			body.ImportIds[i] = val
		}
	} else {
		body.ImportIds = []string{}
	}
	return body
}

// NewExportRequest builds a infohub service Export endpoint payload.
func NewExportRequest(exportName string) *infohub.ExportRequest {
	v := &infohub.ExportRequest{}
	v.ExportName = exportName

	return v
}

// NewImportRequest builds a infohub service Import endpoint payload.
func NewImportRequest(body []byte) *infohub.ImportRequest {
	v := body
	res := &infohub.ImportRequest{
		Data: v,
	}

	return res
}
